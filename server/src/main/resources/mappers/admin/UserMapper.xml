<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.management.mapper.admin.UserMapper">
	<resultMap type="hashmap" id="userListMap">
		<result column="member_no" property="memberNo"/>
		<result column="user_id" property="userId"/>
		<result column="email" property="email"/>
		<result column="name" property="name"/>
		<result column="passwd" property="passwd"/>
		<result column="create_dt" property="createDt"/>
		<result column="update_dt" property="updateDt"/>
		<result column="profile_img" property="profileImg"/>
		<result column="phone_no" property="phoneNo"/>
		<result column="post_no" property="postNo"/>
		<result column="address1" property="address1"/>
		<result column="address2" property="address2"/>
		<result column="use_yn" property="useYn"/>
		<result column="sec_yn" property="secYn"/>
	</resultMap>
	
	<select id="userList" parameterType="hashmap" resultMap="userListMap">
		SELECT
			member_no,
			user_id,
			email,
			name,
			DATE_FORMAT(create_dt, '%Y-%m-%d %T') AS create_dt,
			DATE_FORMAT(update_dt, '%Y-%m-%d %T') AS update_dt,
			profile_img,
			phone_no,
			post_no,
			address1,
			address2,
			use_yn,
			sec_yn
		FROM member_info
		WHERE 1=1
		<if test="userId != null and !userId.equals('')">
			AND BINARY user_id LIKE CONCAT('%', #{userId}, '%')
		</if>
		<if test="email != null and !email.equals('')">
			AND email LIKE CONCAT('%', #{email}, '%')
		</if>
		<if test="name != null and !name.equals('')">
			AND name LIKE CONCAT('%', #{name}, '%')
		</if>
		<if test="phoneNo != null and !phoneNo.equals('')">
			AND phone_no = #{phoneNo}
		</if>
		<if test="userState != null and !userState.equals('')">
			<if test="userState.equals('UseY')">
				AND use_yn = 'Y'
			</if>
			<if test="userState.equals('UseN')">
				AND use_yn = 'N'
			</if>
			<if test="userState.equals('SecY')">
				AND sec_yn = 'Y'
			</if>
			<if test="userState.equals('SecN')">
				AND sec_yn = 'N'
			</if>
		</if>
		<if test="startDate != null and endDate != null and !startDate.equals('') and !endDate.equals('')">
			AND create_dt BETWEEN DATE(#{startDate}) AND DATE_ADD(#{endDate}, INTERVAL 1 DAY)
		</if>
		<if test="pageBegin != null and pageEnd != null">
			LIMIT #{pageBegin}, #{pageEnd}
		</if>
	</select>
	
	<select id="userCnt" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(*)
		FROM member_info
		WHERE 1=1
		<if test="userId != null and !userId.equals('')">
			AND BINARY user_id LIKE CONCAT('%', #{userId}, '%')
		</if>
		<if test="email != null and !email.equals('')">
			AND email LIKE CONCAT('%', #{email}, '%')
		</if>
		<if test="name != null and !name.equals('')">
			AND name LIKE CONCAT('%', #{name}, '%')
		</if>
		<if test="phoneNo != null and !phoneNo.equals('')">
			AND phone_no = #{phoneNo}
		</if>
		<if test="userState != null and !userState.equals('')">
			<if test="userState.equals('UseY')">
				AND use_yn = 'Y'
			</if>
			<if test="userState.equals('UseN')">
				AND use_yn = 'N'
			</if>
			<if test="userState.equals('SecY')">
				AND sec_yn = 'Y'
			</if>
			<if test="userState.equals('SecN')">
				AND sec_yn = 'N'
			</if>
		</if>
		<if test="startDate != null and endDate != null and !startDate.equals('') and !endDate.equals('')">
			AND create_dt BETWEEN DATE(#{startDate}) AND DATE_ADD(#{endDate}, INTERVAL 1 DAY)
		</if>
	</select>
	
	<select id="userIdCheck" parameterType="hashmap" resultType="int">
		SELECT count(*) 
		FROM member_info 
		WHERE user_id = #{userId}
	</select>
	
	<select id="userEmailCheck" parameterType="hashmap" resultType="int">
		SELECT count(*) 
		FROM member_info 
		WHERE email = #{email}
		<if test="updateId != null and !updateId.equals('')">
			AND user_id != #{updateId}
		</if>
	</select>
	
	<select id="userPhoneCheck" parameterType="hashmap" resultType="int">
		SELECT count(*) 
		FROM member_info 
		WHERE phone_no = #{phoneNo}
		<if test="updateId != null and !updateId.equals('')">
			AND user_id != #{updateId}
		</if>
	</select>
	
	<select id="userUpdateList" parameterType="String" resultMap="userListMap">
		SELECT
			name,
			email,
			phone_no,
			address1,
			address2,
			post_no,
			profile_img
		FROM member_info
		WHERE user_id = #{userId}
	</select>
	
	<update id="userUpdate" parameterType="hashmap">
		UPDATE member_info SET
			passwd = #{passwd},
			name = #{name},
			email = #{email},
			phone_no = #{phoneNo},
			address1 = #{address1},
			address2 = #{address2},
			post_no = #{postNo},
			profile_img = #{profileImg}
		WHERE
			user_id = #{userId}
	</update>
	
	<update id="userSec" parameterType="long">
		UPDATE member_info SET
			use_yn = 'N',
			sec_yn = 'Y'
		WHERE member_no = #{memberNo}
	</update>
	
	<update id="userRestore" parameterType="long">
		UPDATE member_info SET
			use_yn = 'Y',
			sec_yn = 'N'
		WHERE member_no = #{memberNo}
	</update>
</mapper>
